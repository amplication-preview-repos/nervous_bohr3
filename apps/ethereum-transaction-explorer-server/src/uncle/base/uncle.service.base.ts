/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Uncle as PrismaUncle } from "@prisma/client";

export class UncleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.UncleCountArgs, "select">): Promise<number> {
    return this.prisma.uncle.count(args);
  }

  async uncles(args: Prisma.UncleFindManyArgs): Promise<PrismaUncle[]> {
    return this.prisma.uncle.findMany(args);
  }
  async uncle(args: Prisma.UncleFindUniqueArgs): Promise<PrismaUncle | null> {
    return this.prisma.uncle.findUnique(args);
  }
  async createUncle(args: Prisma.UncleCreateArgs): Promise<PrismaUncle> {
    return this.prisma.uncle.create(args);
  }
  async updateUncle(args: Prisma.UncleUpdateArgs): Promise<PrismaUncle> {
    return this.prisma.uncle.update(args);
  }
  async deleteUncle(args: Prisma.UncleDeleteArgs): Promise<PrismaUncle> {
    return this.prisma.uncle.delete(args);
  }
}
