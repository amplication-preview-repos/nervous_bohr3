/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Staking as PrismaStaking } from "@prisma/client";

export class StakingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.StakingCountArgs, "select">): Promise<number> {
    return this.prisma.staking.count(args);
  }

  async stakings(args: Prisma.StakingFindManyArgs): Promise<PrismaStaking[]> {
    return this.prisma.staking.findMany(args);
  }
  async staking(
    args: Prisma.StakingFindUniqueArgs
  ): Promise<PrismaStaking | null> {
    return this.prisma.staking.findUnique(args);
  }
  async createStaking(args: Prisma.StakingCreateArgs): Promise<PrismaStaking> {
    return this.prisma.staking.create(args);
  }
  async updateStaking(args: Prisma.StakingUpdateArgs): Promise<PrismaStaking> {
    return this.prisma.staking.update(args);
  }
  async deleteStaking(args: Prisma.StakingDeleteArgs): Promise<PrismaStaking> {
    return this.prisma.staking.delete(args);
  }
}
