/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Nonce as PrismaNonce } from "@prisma/client";

export class NonceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.NonceCountArgs, "select">): Promise<number> {
    return this.prisma.nonce.count(args);
  }

  async nonces(args: Prisma.NonceFindManyArgs): Promise<PrismaNonce[]> {
    return this.prisma.nonce.findMany(args);
  }
  async nonce(args: Prisma.NonceFindUniqueArgs): Promise<PrismaNonce | null> {
    return this.prisma.nonce.findUnique(args);
  }
  async createNonce(args: Prisma.NonceCreateArgs): Promise<PrismaNonce> {
    return this.prisma.nonce.create(args);
  }
  async updateNonce(args: Prisma.NonceUpdateArgs): Promise<PrismaNonce> {
    return this.prisma.nonce.update(args);
  }
  async deleteNonce(args: Prisma.NonceDeleteArgs): Promise<PrismaNonce> {
    return this.prisma.nonce.delete(args);
  }
}
