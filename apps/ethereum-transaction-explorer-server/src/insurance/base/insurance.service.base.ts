/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Insurance as PrismaInsurance } from "@prisma/client";

export class InsuranceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InsuranceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.insurance.count(args);
  }

  async insurances(
    args: Prisma.InsuranceFindManyArgs
  ): Promise<PrismaInsurance[]> {
    return this.prisma.insurance.findMany(args);
  }
  async insurance(
    args: Prisma.InsuranceFindUniqueArgs
  ): Promise<PrismaInsurance | null> {
    return this.prisma.insurance.findUnique(args);
  }
  async createInsurance(
    args: Prisma.InsuranceCreateArgs
  ): Promise<PrismaInsurance> {
    return this.prisma.insurance.create(args);
  }
  async updateInsurance(
    args: Prisma.InsuranceUpdateArgs
  ): Promise<PrismaInsurance> {
    return this.prisma.insurance.update(args);
  }
  async deleteInsurance(
    args: Prisma.InsuranceDeleteArgs
  ): Promise<PrismaInsurance> {
    return this.prisma.insurance.delete(args);
  }
}
