/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, OffChainData as PrismaOffChainData } from "@prisma/client";

export class OffChainDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.OffChainDataCountArgs, "select">
  ): Promise<number> {
    return this.prisma.offChainData.count(args);
  }

  async offChainDataItems(
    args: Prisma.OffChainDataFindManyArgs
  ): Promise<PrismaOffChainData[]> {
    return this.prisma.offChainData.findMany(args);
  }
  async offChainData(
    args: Prisma.OffChainDataFindUniqueArgs
  ): Promise<PrismaOffChainData | null> {
    return this.prisma.offChainData.findUnique(args);
  }
  async createOffChainData(
    args: Prisma.OffChainDataCreateArgs
  ): Promise<PrismaOffChainData> {
    return this.prisma.offChainData.create(args);
  }
  async updateOffChainData(
    args: Prisma.OffChainDataUpdateArgs
  ): Promise<PrismaOffChainData> {
    return this.prisma.offChainData.update(args);
  }
  async deleteOffChainData(
    args: Prisma.OffChainDataDeleteArgs
  ): Promise<PrismaOffChainData> {
    return this.prisma.offChainData.delete(args);
  }
}
