/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Kyc as PrismaKyc } from "@prisma/client";

export class KycServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.KycCountArgs, "select">): Promise<number> {
    return this.prisma.kyc.count(args);
  }

  async kycs(args: Prisma.KycFindManyArgs): Promise<PrismaKyc[]> {
    return this.prisma.kyc.findMany(args);
  }
  async kyc(args: Prisma.KycFindUniqueArgs): Promise<PrismaKyc | null> {
    return this.prisma.kyc.findUnique(args);
  }
  async createKyc(args: Prisma.KycCreateArgs): Promise<PrismaKyc> {
    return this.prisma.kyc.create(args);
  }
  async updateKyc(args: Prisma.KycUpdateArgs): Promise<PrismaKyc> {
    return this.prisma.kyc.update(args);
  }
  async deleteKyc(args: Prisma.KycDeleteArgs): Promise<PrismaKyc> {
    return this.prisma.kyc.delete(args);
  }
}
