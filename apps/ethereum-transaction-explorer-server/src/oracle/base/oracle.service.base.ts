/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Oracle as PrismaOracle } from "@prisma/client";

export class OracleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.OracleCountArgs, "select">): Promise<number> {
    return this.prisma.oracle.count(args);
  }

  async oracles(args: Prisma.OracleFindManyArgs): Promise<PrismaOracle[]> {
    return this.prisma.oracle.findMany(args);
  }
  async oracle(
    args: Prisma.OracleFindUniqueArgs
  ): Promise<PrismaOracle | null> {
    return this.prisma.oracle.findUnique(args);
  }
  async createOracle(args: Prisma.OracleCreateArgs): Promise<PrismaOracle> {
    return this.prisma.oracle.create(args);
  }
  async updateOracle(args: Prisma.OracleUpdateArgs): Promise<PrismaOracle> {
    return this.prisma.oracle.update(args);
  }
  async deleteOracle(args: Prisma.OracleDeleteArgs): Promise<PrismaOracle> {
    return this.prisma.oracle.delete(args);
  }
}
