/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Aml as PrismaAml } from "@prisma/client";

export class AmlServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AmlCountArgs, "select">): Promise<number> {
    return this.prisma.aml.count(args);
  }

  async amls(args: Prisma.AmlFindManyArgs): Promise<PrismaAml[]> {
    return this.prisma.aml.findMany(args);
  }
  async aml(args: Prisma.AmlFindUniqueArgs): Promise<PrismaAml | null> {
    return this.prisma.aml.findUnique(args);
  }
  async createAml(args: Prisma.AmlCreateArgs): Promise<PrismaAml> {
    return this.prisma.aml.create(args);
  }
  async updateAml(args: Prisma.AmlUpdateArgs): Promise<PrismaAml> {
    return this.prisma.aml.update(args);
  }
  async deleteAml(args: Prisma.AmlDeleteArgs): Promise<PrismaAml> {
    return this.prisma.aml.delete(args);
  }
}
