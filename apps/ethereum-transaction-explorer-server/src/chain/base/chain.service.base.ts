/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Chain as PrismaChain } from "@prisma/client";

export class ChainServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ChainCountArgs, "select">): Promise<number> {
    return this.prisma.chain.count(args);
  }

  async chains(args: Prisma.ChainFindManyArgs): Promise<PrismaChain[]> {
    return this.prisma.chain.findMany(args);
  }
  async chain(args: Prisma.ChainFindUniqueArgs): Promise<PrismaChain | null> {
    return this.prisma.chain.findUnique(args);
  }
  async createChain(args: Prisma.ChainCreateArgs): Promise<PrismaChain> {
    return this.prisma.chain.create(args);
  }
  async updateChain(args: Prisma.ChainUpdateArgs): Promise<PrismaChain> {
    return this.prisma.chain.update(args);
  }
  async deleteChain(args: Prisma.ChainDeleteArgs): Promise<PrismaChain> {
    return this.prisma.chain.delete(args);
  }
}
