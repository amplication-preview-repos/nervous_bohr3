/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Bidding as PrismaBidding } from "@prisma/client";

export class BiddingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BiddingCountArgs, "select">): Promise<number> {
    return this.prisma.bidding.count(args);
  }

  async biddings(args: Prisma.BiddingFindManyArgs): Promise<PrismaBidding[]> {
    return this.prisma.bidding.findMany(args);
  }
  async bidding(
    args: Prisma.BiddingFindUniqueArgs
  ): Promise<PrismaBidding | null> {
    return this.prisma.bidding.findUnique(args);
  }
  async createBidding(args: Prisma.BiddingCreateArgs): Promise<PrismaBidding> {
    return this.prisma.bidding.create(args);
  }
  async updateBidding(args: Prisma.BiddingUpdateArgs): Promise<PrismaBidding> {
    return this.prisma.bidding.update(args);
  }
  async deleteBidding(args: Prisma.BiddingDeleteArgs): Promise<PrismaBidding> {
    return this.prisma.bidding.delete(args);
  }
}
