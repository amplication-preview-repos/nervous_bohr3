/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Grant as PrismaGrant } from "@prisma/client";

export class GrantServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.GrantCountArgs, "select">): Promise<number> {
    return this.prisma.grant.count(args);
  }

  async grants(args: Prisma.GrantFindManyArgs): Promise<PrismaGrant[]> {
    return this.prisma.grant.findMany(args);
  }
  async grant(args: Prisma.GrantFindUniqueArgs): Promise<PrismaGrant | null> {
    return this.prisma.grant.findUnique(args);
  }
  async createGrant(args: Prisma.GrantCreateArgs): Promise<PrismaGrant> {
    return this.prisma.grant.create(args);
  }
  async updateGrant(args: Prisma.GrantUpdateArgs): Promise<PrismaGrant> {
    return this.prisma.grant.update(args);
  }
  async deleteGrant(args: Prisma.GrantDeleteArgs): Promise<PrismaGrant> {
    return this.prisma.grant.delete(args);
  }
}
