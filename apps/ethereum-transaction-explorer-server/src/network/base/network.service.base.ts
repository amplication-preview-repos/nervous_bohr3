/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Network as PrismaNetwork } from "@prisma/client";

export class NetworkServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.NetworkCountArgs, "select">): Promise<number> {
    return this.prisma.network.count(args);
  }

  async networks(args: Prisma.NetworkFindManyArgs): Promise<PrismaNetwork[]> {
    return this.prisma.network.findMany(args);
  }
  async network(
    args: Prisma.NetworkFindUniqueArgs
  ): Promise<PrismaNetwork | null> {
    return this.prisma.network.findUnique(args);
  }
  async createNetwork(args: Prisma.NetworkCreateArgs): Promise<PrismaNetwork> {
    return this.prisma.network.create(args);
  }
  async updateNetwork(args: Prisma.NetworkUpdateArgs): Promise<PrismaNetwork> {
    return this.prisma.network.update(args);
  }
  async deleteNetwork(args: Prisma.NetworkDeleteArgs): Promise<PrismaNetwork> {
    return this.prisma.network.delete(args);
  }
}
