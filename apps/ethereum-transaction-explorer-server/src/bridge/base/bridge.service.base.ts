/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Bridge as PrismaBridge } from "@prisma/client";

export class BridgeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BridgeCountArgs, "select">): Promise<number> {
    return this.prisma.bridge.count(args);
  }

  async bridges(args: Prisma.BridgeFindManyArgs): Promise<PrismaBridge[]> {
    return this.prisma.bridge.findMany(args);
  }
  async bridge(
    args: Prisma.BridgeFindUniqueArgs
  ): Promise<PrismaBridge | null> {
    return this.prisma.bridge.findUnique(args);
  }
  async createBridge(args: Prisma.BridgeCreateArgs): Promise<PrismaBridge> {
    return this.prisma.bridge.create(args);
  }
  async updateBridge(args: Prisma.BridgeUpdateArgs): Promise<PrismaBridge> {
    return this.prisma.bridge.update(args);
  }
  async deleteBridge(args: Prisma.BridgeDeleteArgs): Promise<PrismaBridge> {
    return this.prisma.bridge.delete(args);
  }
}
