/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Insight as PrismaInsight } from "@prisma/client";

export class InsightServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.InsightCountArgs, "select">): Promise<number> {
    return this.prisma.insight.count(args);
  }

  async insights(args: Prisma.InsightFindManyArgs): Promise<PrismaInsight[]> {
    return this.prisma.insight.findMany(args);
  }
  async insight(
    args: Prisma.InsightFindUniqueArgs
  ): Promise<PrismaInsight | null> {
    return this.prisma.insight.findUnique(args);
  }
  async createInsight(args: Prisma.InsightCreateArgs): Promise<PrismaInsight> {
    return this.prisma.insight.create(args);
  }
  async updateInsight(args: Prisma.InsightUpdateArgs): Promise<PrismaInsight> {
    return this.prisma.insight.update(args);
  }
  async deleteInsight(args: Prisma.InsightDeleteArgs): Promise<PrismaInsight> {
    return this.prisma.insight.delete(args);
  }
}
