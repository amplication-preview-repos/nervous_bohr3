/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BugBounty as PrismaBugBounty } from "@prisma/client";

export class BugBountyServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BugBountyCountArgs, "select">
  ): Promise<number> {
    return this.prisma.bugBounty.count(args);
  }

  async bugBounties(
    args: Prisma.BugBountyFindManyArgs
  ): Promise<PrismaBugBounty[]> {
    return this.prisma.bugBounty.findMany(args);
  }
  async bugBounty(
    args: Prisma.BugBountyFindUniqueArgs
  ): Promise<PrismaBugBounty | null> {
    return this.prisma.bugBounty.findUnique(args);
  }
  async createBugBounty(
    args: Prisma.BugBountyCreateArgs
  ): Promise<PrismaBugBounty> {
    return this.prisma.bugBounty.create(args);
  }
  async updateBugBounty(
    args: Prisma.BugBountyUpdateArgs
  ): Promise<PrismaBugBounty> {
    return this.prisma.bugBounty.update(args);
  }
  async deleteBugBounty(
    args: Prisma.BugBountyDeleteArgs
  ): Promise<PrismaBugBounty> {
    return this.prisma.bugBounty.delete(args);
  }
}
