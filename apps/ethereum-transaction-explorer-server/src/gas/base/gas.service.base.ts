/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Gas as PrismaGas } from "@prisma/client";

export class GasServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.GasCountArgs, "select">): Promise<number> {
    return this.prisma.gas.count(args);
  }

  async gases(args: Prisma.GasFindManyArgs): Promise<PrismaGas[]> {
    return this.prisma.gas.findMany(args);
  }
  async gas(args: Prisma.GasFindUniqueArgs): Promise<PrismaGas | null> {
    return this.prisma.gas.findUnique(args);
  }
  async createGas(args: Prisma.GasCreateArgs): Promise<PrismaGas> {
    return this.prisma.gas.create(args);
  }
  async updateGas(args: Prisma.GasUpdateArgs): Promise<PrismaGas> {
    return this.prisma.gas.update(args);
  }
  async deleteGas(args: Prisma.GasDeleteArgs): Promise<PrismaGas> {
    return this.prisma.gas.delete(args);
  }
}
